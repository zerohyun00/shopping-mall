{"ast":null,"code":"/*\n  autoMergeLevel1:\n    - merges 1 level of substate\n    - skips substate if already modified\n*/\nexport default function autoMergeLevel1(inboundState, originalState, reducedState, _ref) {\n  let {\n    debug\n  } = _ref;\n  const newState = Object.assign({}, reducedState);\n  // only rehydrate if inboundState exists and is an object\n  if (inboundState && typeof inboundState === 'object') {\n    const keys = Object.keys(inboundState);\n    keys.forEach(key => {\n      // ignore _persist data\n      if (key === '_persist') return;\n      // if reducer modifies substate, skip auto rehydration\n      if (originalState[key] !== reducedState[key]) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('reduxjs-toolkit-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n        return;\n      }\n      // otherwise hard set the new value\n      newState[key] = inboundState[key];\n    });\n  }\n  if (process.env.NODE_ENV !== 'production' && debug && inboundState && typeof inboundState === 'object') console.log(`reduxjs-toolkit-persist/stateReconciler: rehydrated keys '${Object.keys(inboundState).join(', ')}'`);\n  return newState;\n}","map":{"version":3,"names":["autoMergeLevel1","inboundState","originalState","reducedState","debug","newState","Object","assign","keys","forEach","key","process","env","NODE_ENV","console","log","join"],"sources":["C:/Users/kyhh3/Desktop/redux-1-main (2)/node_modules/reduxjs-toolkit-persist/es/stateReconciler/autoMergeLevel1.js"],"sourcesContent":["/*\n  autoMergeLevel1:\n    - merges 1 level of substate\n    - skips substate if already modified\n*/\nexport default function autoMergeLevel1(inboundState, originalState, reducedState, { debug }) {\n    const newState = Object.assign({}, reducedState);\n    // only rehydrate if inboundState exists and is an object\n    if (inboundState && typeof inboundState === 'object') {\n        const keys = Object.keys(inboundState);\n        keys.forEach(key => {\n            // ignore _persist data\n            if (key === '_persist')\n                return;\n            // if reducer modifies substate, skip auto rehydration\n            if (originalState[key] !== reducedState[key]) {\n                if (process.env.NODE_ENV !== 'production' && debug)\n                    console.log('reduxjs-toolkit-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n                return;\n            }\n            // otherwise hard set the new value\n            newState[key] = inboundState[key];\n        });\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n        debug &&\n        inboundState &&\n        typeof inboundState === 'object')\n        console.log(`reduxjs-toolkit-persist/stateReconciler: rehydrated keys '${Object.keys(inboundState).join(', ')}'`);\n    return newState;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,eAAe,CAACC,YAAY,EAAEC,aAAa,EAAEC,YAAY,QAAa;EAAA,IAAX;IAAEC;EAAM,CAAC;EACxF,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,YAAY,CAAC;EAChD;EACA,IAAIF,YAAY,IAAI,OAAOA,YAAY,KAAK,QAAQ,EAAE;IAClD,MAAMO,IAAI,GAAGF,MAAM,CAACE,IAAI,CAACP,YAAY,CAAC;IACtCO,IAAI,CAACC,OAAO,CAACC,GAAG,IAAI;MAChB;MACA,IAAIA,GAAG,KAAK,UAAU,EAClB;MACJ;MACA,IAAIR,aAAa,CAACQ,GAAG,CAAC,KAAKP,YAAY,CAACO,GAAG,CAAC,EAAE;QAC1C,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIT,KAAK,EAC9CU,OAAO,CAACC,GAAG,CAAC,qFAAqF,EAAEL,GAAG,CAAC;QAC3G;MACJ;MACA;MACAL,QAAQ,CAACK,GAAG,CAAC,GAAGT,YAAY,CAACS,GAAG,CAAC;IACrC,CAAC,CAAC;EACN;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IACrCT,KAAK,IACLH,YAAY,IACZ,OAAOA,YAAY,KAAK,QAAQ,EAChCa,OAAO,CAACC,GAAG,CAAE,6DAA4DT,MAAM,CAACE,IAAI,CAACP,YAAY,CAAC,CAACe,IAAI,CAAC,IAAI,CAAE,GAAE,CAAC;EACrH,OAAOX,QAAQ;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}